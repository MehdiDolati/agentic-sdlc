name: PR CI (lint, tests, planner)

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          set -eux
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Ensure CI has basics for this repo
          pip install pytest jinja2 fastapi uvicorn sqlalchemy pydantic pyyaml httpx ruff

      - name: Ruff (lint)
        id: lint
        continue-on-error: true
        run: |
          ruff --version || true
          ruff check . || true

      - name: Run tests
        id: tests
        run: |
          pytest -q services/api/tests || pytest -q services/api/tests -q
        continue-on-error: false

      - name: Planner execution (deterministic)
        id: plan
        env:
          GITHUB_EVENT_PATH: ${{ github.event_path }}
        run: |
          python scripts/ci_planner.py
        continue-on-error: false

      - name: Upload docs artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-artifacts
          if-no-files-found: ignore
          path: |
            docs/prd/**/*.md
            docs/api/generated/**/*.yaml
            docs/adrs/**/*.md
            docs/stories/**/*.md
            docs/tasks/**/*.md
            docs/plans/index.json

      - name: Expose planner outputs to env
        if: always()
        run: |
          {
            echo "PLAN_ID=${{ steps.plan.outputs.plan_id }}";
            echo "PRD_PATH=${{ steps.plan.outputs.prd_path }}";
            echo "OPENAPI_PATH=${{ steps.plan.outputs.openapi_path }}";
            echo "ADR_PATH=${{ steps.plan.outputs.adr_path }}";
            echo "STORIES_PATH=${{ steps.plan.outputs.stories_path }}";
            echo "TASKS_PATH=${{ steps.plan.outputs.tasks_path }}";
          } >> "$GITHUB_ENV"

      - name: Create/Update "Planner" check run
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            // core, github, context are injected â€” do NOT re-declare/import them
            const fs = require('fs');
            let summary = '';
            try {
              summary = fs.readFileSync(process.env.GITHUB_STEP_SUMMARY, 'utf8');
            } catch {}

            const outputs =
              `Plan ID: ${process.env.PLAN_ID || ''}\n` +
              `PRD: ${process.env.PRD_PATH || ''}\n` +
              `OpenAPI: ${process.env.OPENAPI_PATH || ''}\n` +
              `ADR: ${process.env.ADR_PATH || ''}\n` +
              `Stories: ${process.env.STORIES_PATH || ''}\n` +
              `Tasks: ${process.env.TASKS_PATH || ''}\n`;

            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: "Planner",
              head_sha: context.payload.pull_request.head.sha,
              status: "completed",
              conclusion: "success",
              output: {
                title: "Planner Execution",
                summary: summary || "Planner executed. See artifacts.",
                text: outputs
              }
            });
